/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    // json-rpc-dependencies
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.github.arteam:simple-json-rpc-server:1.2'
    
    // hedera dependencies
   // implementation 'com.hedera.hashgraph:sdk:2.14.0' // use this one for java 9 +
    implementation 'com.hedera.hashgraph:sdk-jdk7:2.17.0' // use this one for java 8
    implementation 'io.github.cdimascio:java-dotenv:5.2.1' // Module that stores your environment variables from a .env file
    implementation 'org.slf4j:slf4j-nop:1.7.29'
    implementation 'org.json:json:20220320'
    implementation 'commons-io:commons-io:2.11.0'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    
    
    //classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.20"
}

application {
    // Define the main class for the application.
    mainClass = 'json.rpc.java.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


