/*
 * This Java source file was generated by the Gradle 'init' task.
 * This server is an implementation of the json-rpc java server 
 * retrieved from https://github.com/arteam/simple-json-rpc/tree/master/server
 * and modified to include code from https://medium.com/martinomburajr/java-create-your-own-hello-world-server-2ca33b6957e
 */
package json.rpc.java;

import json.rpc.java.methods.Account;

import com.github.arteam.simplejsonrpc.core.annotation.JsonRpcError;
import com.github.arteam.simplejsonrpc.core.annotation.JsonRpcService;
import com.hedera.hashgraph.sdk.PrecheckStatusException;
import com.hedera.hashgraph.sdk.ReceiptStatusException;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.concurrent.TimeoutException;


@JsonRpcService
public class App {
	
	public App(int port) throws IOException {
		App.listen(port);
	}
	
	// start the JSON-RPC server
    public static void main(String[] args) throws TimeoutException, PrecheckStatusException, ReceiptStatusException, IOException {
    	listen(8080);
    } 
	
	public static void listen(Integer port) throws IOException {
		JavaHttpServer server = new JavaHttpServer(port, "/", new HttpRequestHandler());
		server.start();
		System.out.println("Server is started and listening on port "+ port);
	}
	
	// TODO: implement this so the correct function is called with the correct number of arguments etc. 
	private static Object callAccountFunction(String method, Object args) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException { 
		Class<Account> account = Account.class;
		for (Method account_method: account.getMethods()) {
			if (account_method.getName().toLowerCase().contains(method.toLowerCase())) {
				System.out.println("call method " + method);
				System.out.println(account_method.getParameterCount());
				//return account_method.invoke(null, null);
			}
		}
		return null;
	}
	
	@SuppressWarnings("serial")
	@JsonRpcError(code = -32032, message ="Generic error")
	public class GenericException extends Exception {
		
	}
	
	
}
